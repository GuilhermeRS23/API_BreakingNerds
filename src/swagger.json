{
    "openapi": "3.0.0",
    "info": {
        "title": "Breaking Nerds API Documentação",
        "decription": "Nesta documentação você poderá consultar os end-points da API e também testar todas as rotas disponíveis. Não esqueça de se registrar e realizar a autorização",
        "contact": {
            "email": "guilhermers2014@outlook.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "decription": "Servidor Local"
        }
    ],
    "paths": {
        "/user/create": {
            "post": {
                "summary": "Create a new user",
                "description": "Route responsible for creating a new user",
                "tags": [
                    "Users"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "Users": {
                                    "value": {
                                        "name": "Lando Norris",
                                        "username": "Norris",
                                        "email": "lando@gmail.com",
                                        "password": "0404",
                                        "avatar": "https://i.imgur.com/Ry1cb5M.png",
                                        "background": "https://images.wallpapersden.com/image/download/triangle-8k-blue-pattern_bGZlbmiUmZqaraWkpJRmbmdlrWZlbWU.jpg"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "Search all users",
                "description": "Route responsible for fetching all users",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "summary": "Search user by id",
                "description": "Route responsible for searching for user by id",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/update/{id}": {
            "patch": {
                "summary": "Update user by id",
                "description": "Route responsible for editing the user by id",
                "tags": [
                    "Users"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "Users": {
                                    "value": {
                                        "name": "Guilherme RS"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login to Breaking News",
                "description": "Route responsible for logging in a registered user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            },
                            "examples": {
                                "User": {
                                    "value": {
                                        "email": "super@MAX.com",
                                        "password": "33"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/game/create": {
            "post": {
                "summary": "Create a new game",
                "description": "Route responsible for creating a new Game",
                "tags": [
                    "Games"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            },
                            "examples": {
                                "game": {
                                    "value": {
                                        "user": "",
                                        "title": "Assassin’s Creed Mirage - PlayStation 4",
                                        "description": "Em Assassin's Creed Mirage, você é Basim, um astucioso ladino de rua com visões aterrorizantes e que está em busca de respostas e de justiça. Entre para uma organização antiga e compreenda um novo credo... Um que mudará o destino de Basim de formas que ele jamais poderia imaginar.",
                                        "cover": "https://m.media-amazon.com/images/I/61g6hutObYL._AC_SL1000_.jpg",
                                        "likes": [],
                                        "comments": []
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Games"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game": {
            "get": {
                "summary": "Search all games",
                "description": "Route responsible for fetching all games",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Games"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/top": {
            "get": {
                "summary": "Search top game",
                "description": "Route responsible for fetching top game",
                "tags": [
                    "Games"
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Games"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/search": {
            "get": {
                "summary": "Search games by title",
                "description": "Route responsible for fetching the games that match the title sent via query params",
                "tags": [
                    "Games"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "title",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Games"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/{id}": {
            "get": {
                "summary": "Search game by id",
                "description": "Route responsible for fetching game by id",
                "tags": [
                    "Games"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Game ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Games"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/byUserId": {
            "get": {
                "summary": "Search game by use id",
                "description": "Route responsible for fetching game by use id",
                "tags": [
                    "Games"
                ],
                "responses": {
                    "400": {
                        "description": "Not Found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Games"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/update/{id}": {
            "patch": {
                "summary": "Update a game",
                "description": "Route responsible for updating a Game",
                "tags": [
                    "Games"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Game ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Games"
                            },
                            "examples": {
                                "game": {
                                    "value": {
                                        "cobver": "",
                                        "title": "",
                                        "description": ""
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schemma": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Games"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/{id}/like": {
            "patch": {
                "summary": "Like a game",
                "description": "Route responsible for liking a game",
                "tags": [
                    "Games"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/game/{id}/comment": {
            "patch": {
                "summary": "Comment on a game",
                "description": "Route responsible for commenting on a game",
                "tags": [
                    "Games"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "User ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            },
                            "examples": {
                                "Comment": {
                                    "value": {
                                        "message": "Comentário legal"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/game/{idGame}/{idComment}/comment": {
            "patch": {
                "summary": "Delete your Comment on a game",
                "description": "Route responsible for deleting commenting on a game",
                "tags": [
                    "Games"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "idGame",
                        "type": "string",
                        "description": "Game ID",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "idComment",
                        "type": "string",
                        "description": "Comment ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            },
                            "examples": {
                                "Comment": {
                                    "value": {
                                        "message": "Comentário legal"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/game/delete/{id}": {
            "delete": {
                "summary": "Delete a game",
                "description": "Route responsible for deleting a Game",
                "tags": [
                    "Games"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Game ID",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Unauthorized"
                    },
                    "400": {
                        "description": "Not Found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "background": {
                        "type": "string"
                    }
                }
            },
            "Games": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string"
                    },
                    "cover": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "descrition": {
                        "type": "string"
                    },
                    "likes": {
                        "type": "number"
                    },
                    "comments": {
                        "type": "array"
                    },
                    "createdAt": {
                        "type": "date"
                    }
                }
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}